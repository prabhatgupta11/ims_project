<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="css/newStyle.css">
  <title>Order Billing</title>
  <link rel="stylesheet" href="css/order.css">
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <style>
    body {
      background-color: rgb(244, 244, 247) !important;
    }

    .table-custom tbody tr:nth-child(even) {
      background-color: #ffff;
    }
    

    /* Dark color for odd rows */
    .table-custom tbody tr:nth-child(odd) {
      background-color: rgb(244, 244, 247);
    }

    .tr-head th {
      text-align: center;
    }

    .breadcrumdiv {
      margin-left: 4px;
      margin-top: 0px;

    }

    ul.breadcrumb {

      list-style: none;

      padding-top: 15px;

    }

    ul.breadcrumb li {
      display: inline;
      font-size: 15px;
    }

    ul.breadcrumb li+li:before {
      padding: 8px;
      color: black;
      content: ">\00a0";
    }

    ul.breadcrumb li a {
      color:#4f46e5;
      text-decoration: none;
      
    }

    ul.breadcrumb li a:hover {
      color: #0808f0;
      text-decoration: underline;
    }

    #formdata {
      box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
      width: 60%;
      padding: 8px 20px 18px 20px;
      background-color: white;


    }

    #formdata h5 {
      padding-top: 30px;

    }

    #billing-form h1 {
      text-align: left;
      font-size: 29px;
    }

    /* Media query for mobile devices */
    @media (max-width: 576px) {
      .breadcrumdiv {
        margin-top: 30px;
      }

      ul.breadcrumb li {
        font-size: 14px;
      }

      #formdata {

        width: 100%;

      }

      .input-field::placeholder {

        padding-left: 30px !important;
      }

      .input-field {
        padding-left: 30px !important;
        position: relative !important;
      }


      /* Add more mobile-specific styles here */
    }

    #line {
      padding-bottom: 5px;
      padding-right: 10px;
      padding-left: 12px;
      height: 40px;
      /* Set the height of the container div */

      display: flex;
      align-items: center;
      /* Vertically center the content */
      justify-content: center;
      /* Horizontally center the content */
    }

    #line-content {
      /* font-size: 24px; /* Adjust the font size for the content */
      /*  font-weight: 0px;  /* Adjust the font weight for a thinner appearance */
      background-color: #cbd5e1;
      width: 1px;
      height: 70%;
    }

    ul.breadcrumb li:last-child a {
      color: grey;
      /* Change the color to the grey color you prefer */

    }
  </style>
</head>

<body id="body-pd">

  {{>side}}
  <div class=" m-0" style="padding: 10px;">

    <div class="col-md-12 subtitle d-flex justify-content-between align-items-center w-100"
      style="margin-top: 50px;     padding-bottom: 0px;">

      <div class="me-two d-flex justify-content-center align-items-center">

        <div class="block">
          <h4 class="flex-grow-1 listtocon " style="font-size: 24px; margin-top:0px ;  margin-bottom: 18px;">Order
            Billing
        </div>
        <div id="line">
          <span id="line-content"></span> <!-- Content inside the div -->
        </div>
        <div class="breadcrumdiv">
          <ul class="breadcrumb">
            <li><a href="#"> Home</a></li>
            <li><a href="#">Master</a></li>
            <li><a href="#">Order billing</a></li>

          </ul>
        </div>
      </div>

<a href="/orderList" style="text-decoration: none;margin-right:20px ;margin-top: 25px;" > <i class="fa fa-xmark text-dark fa-2x"></i></a>
     </div>
    </div>
      <div>
        {{#if message}}
        <div class="alert alert-info">{{message}}</div>
        {{/if}}
 
    <form id="billing-form">
      {{!-- <h1>Order Billing</h1> --}}
      <div id="formdata">
        <h4>Enter customer details</h4>


        <label for="store">Your Store:</label>
        <div class="cons" style="position: relative;">
          <div class="icon-context input-field" style="position: absolute; top:8px;left:10px ">
            <i class="fa-solid fa-store icons-icons" style="font-size: 15px;"></i>
          </div>

          <select name="outletId" id="store" class="store-select" style="padding-left: 30px;font-size:14px" required>
            <option value="" disabled selected> Select Store</option>
            {{#each store}}
            <option value={{outletId}} data-store-name="{{storeName}}">{{storeName}}</option>
            {{/each}}
          </select>
        </div>





        <label for="customer-name">Customer Name:</label>
        <input type="text" id="customer-name" name="customerName" placeholder="&#128100;  Enter customer name" required>

        <label for="customer-mobile">Customer Mobile:</label>
        <input type="tel" id="customer-mobile" name="customerMobile" placeholder="&#x260E;   Enter customer mobile"
          required>

        <label for="email">Email ID:</label>
        <input type="email" id="email" name="customerEmail" placeholder="&#x2709;   Enter email id" required>

        <label for="city">City:</label>
        <input type="text" id="city" name="customerCity" placeholder="&#9751;   Enter city" required>

        <label for="state">State:</label>
        <input type="text" id="state" name="customerState" placeholder="&#9751;   Enter state" required>

        <label for="pincode">Pincode:</label>
        <input type="text" id="pincode" name="customerPinCode" placeholder="&#9951;   Enter pincode" required>


        <label for="payment">Payment Method:</label>
        <div class="cons" style="position: relative;">
          <div class="icon-context input-field" style="position: absolute; top:8px;left:10px ">
            <i class="fa-solid fa-cash-register icons-icons" style="font-size: 15px;"></i>
          </div>
          <select id="payment" name="paymentMode" style="padding-left: 30px;font-size:14px" required>
            <option disabled selected>Select Payment Method</option>
            <option value="online">Online</option>
            <option value="offline">Offline</option>
          </select>

        </div>
      </div>


      <table id="product-table" class="table">
        <button type="button" class="delete-row-btn button-15" id="add-product-btn">AddProduct</button>
        <thead>
          <div class="row">
            <tr class="tr-head">

              <div class="col-md-2">
                <th>Product</th>
              </div>
              <div class="col-md-2">
                <th>Quantity</th>
              </div>
              <div class="col-md-1">
                <th>Price</th>
              </div>
              <div class="col-md-1">
                <th>Discount</th>
              </div>
              <div class="col-md-1">
                <th>Total</th>
              </div>
              <div class="col-md-1">
                <th>GST %</th>
              </div>
              <div class="col-md-2">
                <th>Action</th>
              </div>


            </tr>


          </div>
        </thead>
        <tbody id="product-list">

        </tbody>
        <tfoot class="tfoot">
          <tr>

            <td colspan="5" style="text-align: right;"><strong>Grand Total:</strong></td>
            <td><input type="number" name="totalAmount" id="grand-total" readonly></td>
      
          </tr>
        </tfoot>
      </table>
  </div>
  </div>

  <input type="submit" placeholder="Submit" id="type">

  </form>



  </div>
  {{!--
  <script src="/templates/views/script.js"></script> --}}



</body>
<script>
  let tablebody = document.getElementById("product-list");
  let addbtn = document.getElementById("add-product-btn");
  let storeSelect = document.getElementById("store");
  const containerfoot =  document.querySelector(".tfoot")

  addbtn.addEventListener("click", () => {
  const newRow = document.createElement("tr");
      /*  if(containerfoot.style.display === 'none'){
        console.log('worj')
        containerfoot.style.display = 'block'
      }
      else{
        containerfoot.style.display ='none'
      } */

    newRow.innerHTML = `
    <td class="px-0" style="width:20%">
      <select name="itemId" class="product-select">
        <option value="">Select Product</option>
      </select>
    </td>
    <td><input type="number" name="quantity" class="quantity-input col-md-10" value="1"></td>
    <td><input type="number" name="price" class="price-input col-md-10"></td>
    <td><input type="number" name="discount" class="discount-input col-md-10 "></td>
    <td><input type="number" name="total" class="total-cell col-md-10" readonly></td>
    <td><input type="number" name="taxPercentage" class="gst-input col-md-10"></td>
    <td><i class="fa-solid fa-trash delete-row-btn"></i></td>
  `;
    tablebody.appendChild(newRow);
    setupRowListeners(newRow);
    fetchProductsForSelectedStore(newRow);
    updateTotal();
  });

  function fetchProductsForSelectedStore(row) {
    const productSelect = row.querySelector(".product-select");
    if (!productSelect) {
      console.error("Product select element not found in the provided row.");
      return;
    }

    productSelect.innerHTML = '<option value="">Select Product</option>';

    const selectedOutletId = storeSelect.value;

    if (selectedOutletId) {
      fetch(`/getItemsForOutlet/${selectedOutletId}`)
        .then(response => response.json())
        .then(data => {
          console.log(00000000000000, data);
          data.forEach(product => {
            const itemId = product.itemId;
            fetch(`/getProductById/${itemId}`)
              .then(res => res.json())
              .then(actuladat => {
                console.log(111111111111111, actuladat.itemName);
                const option = document.createElement("option");
                option.value = actuladat.itemId;
                option.textContent = actuladat.itemName;
                productSelect.appendChild(option);
              })
              .catch(err => {
                console.log(err.message);
              });
          });
        })
        .catch(error => console.error("Error fetching products:", error));
    }
  }

  //Update price when a product is selected
  document.addEventListener("change", event => {
    if (event.target.classList.contains("product-select")) {
      const selectedProduct = event.target.value;
      const row = event.target.closest("tr");
      const priceInput = row.querySelector(".price-input");

      // Fetch the price of the selected product
      fetch(`/getpriceById/${selectedProduct}`)
        .then(response => response.json())
        .then(data => {
          if (data && data.salePrice) {
            priceInput.value = data.salePrice; // Update the price input with the fetched price
            updateTotal(); // Update the total when the price changes
          }
        })
        .catch(error => console.error("Error fetching product price:", error));
    }
  });

  /*document.addEventListener("change", event => {
    if (event.target.classList.contains("product-select")) {
      const selectedProduct = event.target.value;
      const row = event.target.closest("tr");
      const priceInput = row.querySelector(".price-input");
  
      // Fetch the price of the selected product
      fetch(`/getpriceById/${selectedProduct}`)
        .then(response => response.json())
        .then(data => {
          if (data && data.salePrice) {
            // Update the price input for the correct row
            const priceInput = row.querySelector(".price-input");
            priceInput.value = data.salePrice;
  
            updateTotal(); // Update the total when the price changes
          }
        })
        .catch(error => console.error("Error fetching product price:", error));
    }
  });
  */

  storeSelect.addEventListener("change", fetchProductsForSelectedStore);

  document.getElementById("billing-form").addEventListener("submit", async () => {
    const customerName = document.getElementById("customer-name").value;
    const customerMobile = document.getElementById("customer-mobile").value;
    const customerEmail = document.getElementById("email").value;
    const customerCity = document.getElementById("city").value;
    const customerState = document.getElementById("state").value;
    const customerPinCode = document.getElementById("pincode").value;
    const paymentMode = document.getElementById("payment").value;
    const totalAmount = document.getElementById("grand-total").value;

    const productRows = Array.from(document.querySelectorAll("#product-list tr"));
    const products = productRows.map(row => {
      const productSelect = row.querySelector(".product-select");
      const quantityInput = row.querySelector(".quantity-input");
      const priceInput = row.querySelector(".price-input");
      const discountInput = row.querySelector(".discount-input");
      const totalInput = row.querySelector(".total-cell");
      const gstInput = row.querySelector(".gst-input");

      return {
        outletId: storeSelect.value,
        storeName: storeSelect.options[storeSelect.selectedIndex].text,
        itemId: productSelect.value,
        itemName: productSelect.options[productSelect.selectedIndex].text,
        quantity: quantityInput.value,
        price: priceInput.value,
        discount: discountInput.value,
        itemAmount: totalInput.value,
        taxPercentage: gstInput.value,
      };
    });

    const dataToSend = {
      customerName,
      customerMobile,
      customerEmail,
      customerCity,
      customerState,
      customerPinCode,
      paymentMode,
      totalAmount,
      products
    };

    const response = await fetch("/order", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(dataToSend)
    });

    const responseData = await response.json();
    resetFormAndProductList();
  });

  function resetFormAndProductList() {
    document.getElementById("customer-name").value = "";
    document.getElementById("customer-mobile").value = "";
    document.getElementById("email").value = "";
    document.getElementById("city").value = "";
    document.getElementById("state").value = "";
    document.getElementById("pincode").value = "";
    document.getElementById("grand-total").value = "";
    document.getElementById("payment").selectedIndex = 0;
    tablebody.innerHTML = "";
  }



  function setupRowListeners(row) {
    const productSelect = row.querySelector(".product-select");
    const quantityInput = row.querySelector(".quantity-input");
    const priceInput = row.querySelector(".price-input");
    const gstInput = row.querySelector(".gst-input");
    const discountInput = row.querySelector(".discount-input");
    const totalInput = row.querySelector(".total-cell");
    const deleteBtn = row.querySelector(".delete-row-btn");

    productSelect.addEventListener("change", updateTotal);
    quantityInput.addEventListener("input", updateTotal);
    priceInput.addEventListener("input", updateTotal);
    gstInput.addEventListener("input", updateTotal);
    discountInput.addEventListener("input", updateTotal);

    deleteBtn.addEventListener("click", function () {
      row.remove();
      updateTotal();
    });
  }

  function updateTotal() {
    const rows = tablebody.querySelectorAll("tr");
    let grandTotal = 0;

    rows.forEach(row => {
      const quantity = parseFloat(row.querySelector(".quantity-input").value);
      const price = parseFloat(row.querySelector(".price-input").value);
      const discount = parseFloat(row.querySelector(".discount-input").value);
      const gst = parseFloat(row.querySelector(".gst-input").value);

      const total = (quantity * price) - (quantity * price) * discount / 100;
      const gstAmount = (total * (quantity * gst)) / 100;

      const totalWithGST = total + gstAmount;
      row.querySelector(".total-cell").value = total.toFixed();

      grandTotal += totalWithGST;
    });

    document.getElementById("grand-total").value = grandTotal.toFixed(2);
  }


 

</script>