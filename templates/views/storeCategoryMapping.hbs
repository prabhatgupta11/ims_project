<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <link rel="stylesheet" href="css/newStyle.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    .icons-short {
      position: absolute;
      left: 8%;
      top: 50%;
      color: gray;
    }

    .pra-pra {
      -webkit-text-stroke: thin;
      font-size: 1.4rem;
      line-height: 2rem;
      color: #1e293b;
      font-weight: 500 !important;
    }



    .icons-icons {
      position: absolute !important;
      left: 1% !important;
      bottom: 0% !important;
      margin-bottom: 8px;
      color: gray;

    }

    .input-field-second::placeholder {
      position: relative !important;
      padding-left: 25px !important;
    }

    .input-field::placeholder {

      padding-left: 30px !important;
    }

    .input-field {
      padding-left: 30px !important;
      position: relative !important;
    }

    .input-field-second {
      padding-left: 25px !important;

    }

    .breadcrumdiv {
      margin-left: 4px;


    }

    ul.breadcrumb {

      list-style: none;

      padding-top: 15px;
      padding-bottom: 15px;
    }

    ul.breadcrumb li {
      display: inline;
      font-size: 18px;
    }

    ul.breadcrumb li+li:before {
      padding: 8px;
      color: black;
      content: ">\00a0";
    }

    ul.breadcrumb li a {
      color: #3019fa;
      text-decoration: none;
    }

    ul.breadcrumb li a:hover {
      color: #0808f0;
      text-decoration: underline;
    }

    /* Light color for even rows */
    .table-custom tbody tr:nth-child(even) {
      background-color: #ffff;
    }

    /* Dark color for odd rows */
    .table-custom tbody tr:nth-child(odd) {
      background-color: rgb(244, 244, 247);
    }

    .breadcrumdiv {
      margin-left: 4px;


    }

    ul.breadcrumb {

      list-style: none;
      padding-bottom: 5px;
      padding-top: 15px;

    }

    ul.breadcrumb li {
      display: inline;
      font-size: 15px;
    }


    ul.breadcrumb li:last-child a {
      color: grey;
      /* Change the color to the grey color you prefer */

    }

    ul.breadcrumb li+li:before {
      padding: 8px;
      color: black;
      content: ">\00a0";
    }

    ul.breadcrumb li a {
      color: #3019fa;
      text-decoration: none;
    }

    ul.breadcrumb li a:hover {

      text-decoration: underline;
    }

    #line {
      padding-bottom: 5px;
      padding-right: 10px;
      padding-left: 12px;
      height: 40px;
      /* Set the height of the container div */

      display: flex;
      align-items: center;
      /* Vertically center the content */
      justify-content: center;
      /* Horizontally center the content */
    }

    #line-content {
      /* font-size: 24px; /* Adjust the font size for the content */
      /*  font-weight: 0px;  /* Adjust the font weight for a thinner appearance */
      background-color: #cbd5e1;
      width: 1px;
      height: 70%;
    }

    ul.breadcrumb li:last-child a {
      color: grey;
      /* Change the color to the grey color you prefer */

    }
  </style>
</head>

<body>


  {{>side}}
  <div class="height-100 ">
    {{!-- <h3 class="pt-4">User Store Mapping</h3> --}}
    {{#if message}}
    <div class="alert alert-info">{{message}}</div>
    {{/if}}
    {{#if message}}
    <div class="alert alert-info">{{message}}</div>
    {{/if}}
    {{!-- <div class="store   col-md-12" style="display: flex;justify-content:space-between">
      <div class="cross-section">

      </div>
      <a href="/storeList" style="text-decoration: none;margin-right:20px"> <i
          class="fa fa-xmark text-dark fa-2x"></i></a>
    </div>
    --}}

    <div class="col-md-12 subtitle d-flex justify-content-between align-items-center w-100"
      style="margin-top: 70px;     padding-bottom: 0px;">
      <div class="me-two d-flex justify-content-center align-items-center">
        <div class="block">
          <h4 class="flex-grow-1 listtocon " style="font-size: 24px; margin-top:0px;">Store Category Mapping
        </div>
        <div id="line">
          <span id="line-content"></span> <!-- Content inside the div -->
        </div>
        <div class="breadcrumdiv">
          <ul class="breadcrumb">
            <li><a href="#"> Home</a></li>
            <li><a href="#">Master</a></li>
            <li><a href="#">Store Category Mapping</a></li>

          </ul>
        </div>

      </div>

      {{!-- <div>

        <a href="/storeList" style="text-decoration: none;margin-right:20px"> <i
            class="fa fa-xmark text-dark fa-2x"></i></a>
      </div> --}}
    </div>
    <form action="/storeCategoryMapping" method="post" class="form-form">
      <div class="col-md-6 main-table-data container main-table-box">
        <div class="col-md-12 title-title">
          <h3 class="pt-4 h4-title">Add Store & Category Details</h3>
        </div>
        <div class="form-group py-2">
          <label for="form17" class="formlabel">Store</label>
          <select id="form17" name="outletId" class="form-control input-field" required>
            <option value="" disabled selected>Select Store</option>
            {{#each store}}
            <option value="{{outletId}}"> {{ storeName }} </option>
            {{/each}}
          </select>
          <div class="icon-context input-field">
            <i class="fa-solid fa-user icons-icons"></i>
          </div>
        </div>
        <div class="form-group py-2 ">
          <label class="formlabel fw-bold" style="display: block;">Select Category</label>
          <div class="md-form mb-4  active-pink-textarea-2" style="display: inherit;" id="categoryList">


          </div>
            </div>
          <div class="container" style="padding: 20px 0px;">
            <div class="row">
              <div class="col-md-12 form-buttons p-0 m-0 d-flex">
                <button class="button-15" role="button" type="submit" style="margin:10px">Save</button>

                <button class="button-15" role="button" type="reset" style="margin:10px 0px">Cancel</button>
              </div>

            </div>
          </div>
    </form>
  </div>


  </div>
</body>

</html>


<!-- Add this script tag to include jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

{{!-- <script>
  $(document).ready(function () {
    $('#form17').on('change', function () {

      const outletId = $(this).val();
      // Use an API endpoint to fetch the user's selected stores based on userId
      $.get(`/getSelectedCategories/${outletId}`, function (selectedCategories) {
        // Clear the previous content in #storeList
        $('#categoryList').empty()
        // Loop through the selectedStores and mark the corresponding checkboxes as checked
        selectedCategories.forEach(function (data) {
          // if (data.checked == false) {
          $('#categoryList').append(
            $(document.createElement('input')).prop({
              id: 'myCheckBox' + data.categoryId,
              name: 'categoryId',
              value: data.categoryId,
              type: 'checkbox',
              checked: data.checked
            })
              checkbox.on('change', function () {
              const isChecked = $(this).prop('checked');
              if (!isChecked) {
                // Handle deselection here
                // Remove the store from the user's selection on the server-side
                $.post(`/deselectCategory/${outletId}/${data.categoryId}`, function (response) {
                  console.log(response);
                });
              }
            });


          ).append(
              $(document.createElement('label')).prop({
                for: 'myCheckBox'+ data.categoryId
              }).html(data.shortDescription)
            ).append(document.createElement('br'));
        // }
      })
    });
  });
  });
</script> --}}



<script>
  $(document).ready(function () {
    $('#form17').on('change', function () {
      const outletId = $(this).val();

      // Use an API endpoint to fetch the user's selected stores based on userId
      $.get(`/getSelectedCategories/${outletId}`, function (selectedCategories) {
        const categoryList = $('#categoryList');

        // Clear the previous content in #storeList
        categoryList.empty();

        // Loop through the selectedStores and create checkboxes with labels
        selectedCategories.forEach(function (data) {
          const checkbox = $(document.createElement('input')).prop({
            id: 'myCheckBox_' + data.categoryId,
            name: 'categoryId',
            value: data.categoryId,
            type: 'checkbox',
            checked: data.checked
          });

            checkbox.on('change', function () {
                const isChecked = $(this).prop('checked');
                if (!isChecked) {
                    // Handle deselection here
                    // Remove the store from the user's selection on the server-side
                    $.post(`/deselectCategory/${outletId}/${data.categoryId}`, function (response) {
                        console.log(response);
                    });
                }
            });

          categoryList.append(checkbox)
            .append(
              $(document.createElement('label')).prop({
                for: 'myCheckBox_' + data.categoryId
              }).html(data.shortDescription)
            )
            .append(document.createElement('br'));
        });
      });
    });
  });
</script>