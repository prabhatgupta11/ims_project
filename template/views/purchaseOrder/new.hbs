<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Add Purchase Order</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="../../vendors/feather/feather.css">
    <link rel="stylesheet" href="../../vendors/ti-icons/css/themify-icons.css">
    <link rel="stylesheet" href="../../vendors/css/vendor.bundle.base.css">
    <!-- endinject -->
    <!-- Plugin css for this page -->
    <link rel="stylesheet" href="../../vendors/select2/select2.min.css">
    <link rel="stylesheet" href="../../vendors/select2-bootstrap-theme/select2-bootstrap.min.css">
    <!-- End plugin css for this page -->
    <!-- inject:css -->
    <link rel="stylesheet" href="../../css/vertical-layout-light/style.css">
    <!-- endinject -->
    <link rel="shortcut icon" href="../../images/favicon.png" />
    <style>
        .color-container {
            position: absolute;
            z-index: 0;
            top: 0;
            height: 200px;
            width: 100%;
            background-color: #9096de;
        }
    </style>
</head>

<body>
    <div class="container-scroller">
        <!-- partial:../../partials/_navbar.html -->
        {{>navbar}}
        <!-- partial -->
        <div class="container-fluid page-body-wrapper">
            <!-- partial:../../partials/_settings-panel.html -->
            {{>setting}}
            <!-- partial -->
            <!-- partial:../../partials/_sidebar.html -->
            {{>side}}
            <!-- partial -->

            <div class="main-panel">
                <div class="color-container"></div>
                <div class="content-wrapper">

                    <div class="row">
                        <div class="d-flex mt-2 mb-3">
                            <a href="/purchaseOrderList" class="text-white" style="z-index: 3;"><i
                                    class="fa-solid fa-angle-left "></i></a>
                            <h3 class="card-title ml-4 my-0 font-weight-semibold text-white" style="z-index: 3;">Add
                                Purchase Order</h3>


                        </div>
                        {{#if message}}
                        <div class="alert alert-info">{{message}}</div>
                        {{/if}}
                        <div id="flash-message" class="alert alert-danger" style="display: none;"></div>
                        <form action="/createPurchaseOrder" method="post">
                            <div class="row justify-content-around">
                                <div class="col-md-6 grid-margin stretch-card  ">
                                    <div class="card   wrapper">
                                        <div class="card-body p-0">
                                            <div class="row justify-content-around mx-auto ">
                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <label for="exampleInputEmail1">PO No<span
                                                                class="text-danger">*</span></label>
                                                        <input type="text" class="form-control input-field-three"
                                                            id="exampleInputEmail1" aria-describedby="emailHelp"
                                                            name="purchaseOrderNo"
                                                            placeholder="Enter Purchase Order Number" required
                                                            readonly />
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <label for="exampleInputEmail1">Date<span
                                                                class="text-danger">*</span></label>
                                                        <input type="date" class="form-control input-field"
                                                            id="orderDate" aria-describedby="emailHelp" name="orderDate"
                                                            placeholder="Enter Order Date" required>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row  mx-auto ">
                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <label for="exampleInputEmail1">Store<span
                                                                class="text-danger">*</span></label>
                                                        <select class="form-control input-field " id="storeDropdown"
                                                            name="outletId" aria-label="Default select example"
                                                            style="border-radius: 10px; padding-left: 40px;" required>
                                                            {{#each store}}
                                                            <option value="{{outletId}}"> {{ storeName }} </option>
                                                            {{/each}}
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <label for="exampleInputEmail1">Supplier<span
                                                                class="text-danger">*</span></label>
                                                        <div class="d-flex align-items-center">
                                                            <input type="text" id="supplierSearch"
                                                                class="w-50 py-1 pl-2  mb-2 form-control "
                                                                placeholder="Search for a supplier"
                                                                onkeyup="searchSuppliers()"
                                                                style="border: 1px solid lightgray;" />
                                                            <button class="btn btn-primary  mb-2 " role="button"
                                                                type="button" style="margin:0px 10px 0px 10px"><a
                                                                    href="/supplierMaster"
                                                                    class="text-white text-decoration-none "> + New
                                                                    Supplier</a></button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <select class="form-control input-field" id="supplierDropdown"
                                                            name="supplierCustomer" aria-label="Default select example"
                                                            style="border-radius: 10px; padding-left: 40px; " required>
                                                            <option class="opt" value="" disabled selected>Select
                                                                Supplier</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <label for="exampleInputEmail1">Supplier Name <span
                                                                class="text-danger">*</span></label>
                                                        <input type="text" class="form-control   if-second bg-light "
                                                            id="supplierName" aria-describedby="emailHelp" name="name"
                                                            placeholder=" Enter Supplier Name" required readonly>
                                                    </div>
                                                </div>

                                                <div class="col-md-12 d-flex">
                                                    <div class="col-md-6 p-0">
                                                        <div class="form-group mb-2 ">
                                                            <label for="exampleInputEmail1">Email<span
                                                                    class="text-danger">*</span></label>
                                                            <input type="email" class="form-control if-second bg-light"
                                                                id="supplierEmail" aria-describedby="emailHelp"
                                                                name="email" placeholder="Enter Supplier Email" required
                                                                readonly />
                                                        </div>
                                                    </div>
                                                    <div class="col-md-6 px-1">
                                                        <div class="form-group mb-2 ">
                                                            <label for="exampleInputEmail1">Mobile No<span
                                                                    class="text-danger">*</span></label>
                                                            <input type="number" class="form-control if-second bg-light"
                                                                id="supplierMobile" aria-describedby="emailHelp"
                                                                name="mobileNo"
                                                                placeholder="Enter Supplier Mobile Number" required
                                                                readonly>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-12">
                                                    <div class="form-group mb-2 ">
                                                        <label for="exampleInputEmail1">Remarks</label>
                                                        <textarea type="text" class="form-control input-field-three"
                                                            id="exampleInputEmail1" aria-describedby="emailHelp"
                                                            rows="3" name="remarks"
                                                            placeholder="Enter remark here......"></textarea>
                                                    </div>
                                                </div>
                                                 <button type="button" class="delete-row-btn btn btn-primary button-15 mx-3" style="padding: 11px;"><a class="text-decoration-none text-white" href="/newProduct"> + New Product</a></button>
                                            </div>
                                        </div>

                                    </div>
                                </div>


                              
                            </div>

                        </form>
                    </div>

                </div>


            </div>
        </div>
    </div>
    <!-- container-scroller -->
    <!-- plugins:js -->
    <script src="../../vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="../../vendors/typeahead.js/typeahead.bundle.min.js"></script>
    <script src="../../vendors/select2/select2.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="../../js/off-canvas.js"></script>
    <script src="../../js/hoverable-collapse.js"></script>
    <script src="../../js/template.js"></script>
    <script src="../../js/settings.js"></script>
    <script src="../../js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page-->
    <script src="../../js/file-upload.js"></script>
    <script src="../../js/typeahead.js"></script>
    <script src="../../js/select2.js"></script>
    <!-- End custom js for this page-->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</body>

</html>

<script>
    $.get(`/purchaseOrderNo/`, function (reffnum) {
        function generateUniqueIdentifier(response) {
            if (response && response.length === 1) {
                const item = response[0];
                const { id, prefix, lastNo, suffix } = item;

                // Increment the lastno value and pad it to 6 digits
                const newLastNo = (parseInt(lastNo) + 1).toString().padStart(6, '0');

                // Construct the unique identifier string
                const uniqueIdentifier = `${prefix}/${newLastNo}/${suffix}`;

                // Update the lastno value in the response
                item.lastNo = newLastNo;


                // Update the input field value with the uniqueIdentifier
                $('#exampleInputEmail1').val(uniqueIdentifier);


                return uniqueIdentifier;
            } else {
                return null; // Handle invalid response
            }
        }

        const uniqueIdentifier = generateUniqueIdentifier(reffnum);
        console.log('Generated Unique Identifier:', uniqueIdentifier);
    });
</script>

<script>
    function searchSuppliers() {
        var input, filter, select, option, txtValue;
        input = document.getElementById('supplierSearch');
        filter = input.value.toUpperCase();
        select = document.getElementById('supplierDropdown');
        option = select.getElementsByTagName('option');

        for (var i = 0; i < option.length; i++) {
            txtValue = option[i].textContent;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                option[i].style.display = '';
                console.log(txtValue.toUpperCase().indexOf(filter))
            }
            else {
                option[i].style.display = 'none';
            }

        }
    }
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Call populateSuppliers function on page load if a specific store is selected
        const selectedStore = $('#storeDropdown').val();
        if (selectedStore !== "") {
            populateSuppliers();
        }

        // Add an event listener to the store dropdown to call populateSuppliers on change
        $('#storeDropdown').change(function () {
            const selectedStore = $(this).val();
            if (selectedStore !== "") {
                populateSuppliers();
            }
        });
    });

    // Function to populate the Supplier dropdown based on the selected store
    function populateSuppliers() {
        const outletId = $('#storeDropdown').val();
        console.log(outletId, 123456)
        $.get(`/suppliers/${outletId}`, function (suppliers) {
            const supplierDropdown = $('#supplierDropdown');
            supplierDropdown.empty();
            supplierDropdown.append('<option value="">Select Supplier</option>');
            suppliers.forEach(function (supplier) {
                console.log(supplier.Name, 111111)
                supplierDropdown.append(`<option value="${supplier.id}">${supplier.Name}</option>`);
            });
        });
    }

    $('#supplierDropdown').change(function () {
        // Get the selected supplier value when the store dropdown changes
        const supplierId = $('#supplierDropdown').val();
        $.get(`/allSuppliers/${supplierId}`, function (suppliers) {
            if (suppliers.length > 0) {
                const supplier = suppliers[0]; // Get the first (and only) object in the array
                const supplierNameInput = $('#supplierName');
                const supplierEmailInput = $('#supplierEmail');
                const supplierMobileInput = $('#supplierMobile');

                // Populate the input fields with the supplier data
                supplierNameInput.val(supplier.Name);
                supplierEmailInput.val(supplier.Email);
                supplierMobileInput.val(supplier.ContactNo);
            }
        });
    });

</script>

<script>
    // current date into Order Date
    document.addEventListener("DOMContentLoaded", function () {
        // Get the current date in the format yyyy-mm-dd
        const currentDate = new Date().toISOString().split("T")[0];

        // Set the default value for the date input
        document.getElementById("orderDate").value = currentDate;
    });


    let addbtn = document.getElementById("add-product-btn");
    let tablebody = document.getElementById("product-list")
    let grandTotal = document.getElementById("grand-total");
    addbtn.addEventListener('click', () => {
        document.querySelector('.grand-total-cls').style.right = "-1000px"
    })

    window.addEventListener("load", () => {
        const newRow = document.createElement("tr");

        newRow.innerHTML = `
    <td class="px-0" style="width:20%">
      <select name="itemId[]" class="product-select rounded-3 p-1 mx-2">
        <option value="">Select Product</option>
        {{#each product}}
        <option value='{{itemId}}'>{{itemName}}</option>
        {{/each}}
      </select>
    </td>
    <td><input type="text" name="hsnCode[]" class="col-md-12 p-1 mx-2" readonly></td>
    <td><input type="text" name="batchNo[]" class=" col-md-12 p-1 mx-2"></td>
    <td><input type="date" name="mfgDate[]" class=" col-md-12 p-1 mx-2"></td>
    <td><input type="date" name="expDate[]" class="col-md-12 p-1 mx-2"></td>
    <td class="px-0 d-none" style="width:20%">
      <select name="freeQty[]" class="product-select rounded-3 p-1 mx-2">
        <option value="">Select Free Qty</option>
         <option value="Yes">Yes</option>
          <option value="No">No</option> 
      </select>
    </td>
    <td><input type="number" name="qty[]" class=" col-md-12  p-1 mx-2"></td>
    <td><input type="number" name="purchasePrice[]" step='0.01' class=" col-md-12  p-1 mx-2 "></td>
    <td class = 'd-none'><input type="text"  name="discountType[]" class="col-md-12  p-1 mx-2" value = "percentage"></td>
    <td class="d-none"><input type="number" name="discount[]" step='0.01' class=" col-md-12 p-1 mx-2 "></td>
    <td class="d-none"><input type="number" name="originalPrice[]" step='0.01' class=" col-md-12 p-1 mx-2 " readonly></td>
    <td><input type="number" name="mrp[]" class=" step='0.01' col-md-12 p-1 mx-2 "></td> 
    <td><input type="number" name="salePriceInclTax[]" step='0.01' class=" col-md-12 p-1 mx-2 "></td>
    <td class="d-none"><input type="number" name="taxPercentage[]" step='0.01' class=" col-md-12 p-1 mx-2 " readonly></td>
    <td class="d-none"><input type="number" name="taxAmount[]" step='0.01' class=" col-md-12 p-1 mx-2 " readonly></td>
    <td><input type="number" name="salePriceExclTax[]" step='0.01' class=" col-md-12 p-1 mx-2 " readonly></td>
    <td class="d-none"><input type="number" name="costPriceWithoutTax[]" step='0.01' class=" col-md-12 p-1 mx-2 "></td>
    <td class = 'd-none'><input type="number" name="packing[]" class=" col-md-12 p-1 mx-2 "></td>
    <td class = 'd-none'><input type="number" name="pack[]" class=" col-md-12 p-1 mx-2 "></td>
    <td><input type="number" name="totalAmount[]" step='0.01' class=" col-md-12 p-1 mx-2 " readonly></td>
    <td><i class="fa-solid fa-plus mr-3 fa-2xl add-new-btn"  ></i><i class="fa-solid fa-trash-arrow-up fa-xl delete-row-btn  text-danger ml-auto"></i> </td>
  `;
        tablebody.appendChild(newRow);
        addNewRowButton(newRow)
        removeRow(newRow);

        const productDropdown = $(newRow).find('select[name="itemId[]"]');
        productDropdown.change(function () {
            const itemId = $(this).val();
            const hsnCode = $(this).closest('tr').find('input[name="hsnCode[]"]');
            const taxPercentage = $(this).closest('tr').find('input[name="taxPercentage[]"]');
            // Clear and populate the batchDropdown based on the selected itemId
            populateHsnCode(itemId, hsnCode);
            populateTaxPercentage(itemId, taxPercentage);
        });

        // Attach event listeners for Quantity, Purchase Price, and Discount Percentage
        const quantityInput = newRow.querySelector('input[name="qty[]"]');
        const purchasePriceInput = newRow.querySelector('input[name="purchasePrice[]"]');
        // const discountPercentageInput = newRow.querySelector('input[name="discount[]"]');
        //  const originalPriceInput = newRow.querySelector('input[name="originalPrice[]"]');
        const salePriceInclTaxInput = newRow.querySelector('input[name="salePriceInclTax[]"]');
        const salePriceExclTaxInput = newRow.querySelector('input[name="salePriceExclTax[]"]');
        const taxPercentageInput = newRow.querySelector('input[name="taxPercentage[]"]');
        const taxAmountInput = newRow.querySelector('input[name="taxAmount[]"]');
        const totalAmountInput = newRow.querySelector('input[name="totalAmount[]"]');


        quantityInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
        purchasePriceInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
        salePriceInclTaxInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
        // discountPercentageInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
        taxPercentageInput.addEventListener("input", () => updateOriginalPrice.call(newRow))


        // Initial calculation when adding a new row
        updateOriginalPrice.call(newRow);
        updateGrandTotal();

        // fetchProductsForSelectedStore(newRow);
        // updateTotal();
    });

    //function to populate hsnCode based on selected itemId
    function populateHsnCode(itemId, hsnCode) {
        // Clear the previous content in the hsnCode input field
        hsnCode.val(""); // Clear the value

        // Make an AJAX request to fetch the HSN code based on the selected item
        $.get(`/getHsnCode/${itemId}`, function (data) {

            hsnCode.val(data.hsnCode);
        })
    }



    //function to populate tax percentage based on selected itemId
    function populateTaxPercentage(itemId, taxPercentage) {
        // Clear the previous content in the tax percentage
        taxPercentage.val("");

        // Make an AJAX request to fetch the HSN code based on the selected item
        $.get(`/getTaxPercentage/${itemId}`, function (data) {

            taxPercentage.val(data.Tax_percentage)
        });
    }

    function updateOriginalPrice() {
        // Get the input fields for Quantity, Purchase Price, Discount Percentage, and Original Price
        const quantityInput = this.querySelector('input[name="qty[]"]');
        const purchasePriceInput = this.querySelector('input[name="purchasePrice[]"]');
        // const discountPercentageInput = this.querySelector('input[name="discount[]"]');
        // const originalPriceInput = this.querySelector('input[name="originalPrice[]"]');
        const salePriceInclTaxInput = this.querySelector('input[name="salePriceInclTax[]"]');
        const salePriceExclTaxInput = this.querySelector('input[name="salePriceExclTax[]"]');
        const taxPercentageInput = this.querySelector('input[name="taxPercentage[]"]');
        const taxAmountInput = this.querySelector('input[name="taxAmount[]"]');
        const totalAmountInput = this.querySelector('input[name="totalAmount[]"]');

        // Parse the values from input fields
        const quantity = parseFloat(quantityInput.value) || 0;
        const purchasePrice = parseFloat(purchasePriceInput.value) || 0;
        // const discountPercentage = parseFloat(discountPercentageInput.value) || 0;
        const taxPercentage = parseFloat(taxPercentageInput.value) || 0;
        const salePriceInclTax = parseFloat(salePriceInclTaxInput.value) || 0;


        // const originalPrice = purchasePrice - (purchasePrice * (discountPercentage / 100));
        const salePriceExclTax = salePriceInclTax / (1 + taxPercentage / 100);
        // const taxAmount = salePriceInclTax * (taxPercentage / 100);
        const taxAmount = salePriceInclTax - salePriceExclTax
        const totalAmount = quantity * purchasePrice

        // Update the Original Price field,tax amount field and total amount field with the calculated value
        //  originalPriceInput.value = parseFloat(originalPrice.toFixed(2)) // Format to two decimal places
        salePriceExclTaxInput.value = parseFloat(salePriceExclTax.toFixed(2))
        taxAmountInput.value = parseFloat(taxAmount.toFixed(2))
        totalAmountInput.value = parseFloat(totalAmount.toFixed(2))
        updateGrandTotal();
    }

    function updateGrandTotal() {
        let rows = tablebody.querySelectorAll("tr");
        let total = 0;


        rows.forEach(row => {
            const totalAmountInput = row.querySelector('input[name="totalAmount[]"]');
            const totalAmount = parseFloat(totalAmountInput.value) || 0;
            total += totalAmount;
        });
        grandTotal.value = total; // Update the grand total in your HTML
    }

    function removeRow(row) {
        const deleteBtn = row.querySelector(".delete-row-btn");
        deleteBtn.addEventListener("click", function () {
            row.remove();
            updateGrandTotal()
        });
    }

    function addNewRowButton(row) {
        const addBtn = row.querySelector(".add-new-btn");

        addBtn.addEventListener("click", function () {
            // Clone the current row
            const newRow = row.cloneNode(true);

            // Clear the values in the cloned row
            const inputs = newRow.querySelectorAll('input');
            for (const input of inputs) {
                input.value = "";
            }

            const productDropdown = $(newRow).find('select[name="itemId[]"]');
            productDropdown.change(function () {
                const itemId = $(this).val();
                const hsnCode = $(this).closest('tr').find('input[name="hsnCode[]"]');
                const taxPercentage = $(this).closest('tr').find('input[name="taxPercentage[]"]');
                // Clear and populate the batchDropdown based on the selected itemId
                populateHsnCode(itemId, hsnCode);
                populateTaxPercentage(itemId, taxPercentage);
            });

            // Attach event listeners for Quantity, Purchase Price, and Discount Percentage
            const quantityInput = newRow.querySelector('input[name="qty[]"]');
            const purchasePriceInput = newRow.querySelector('input[name="purchasePrice[]"]');
            // const discountPercentageInput = newRow.querySelector('input[name="discount[]"]');
            //  const originalPriceInput = newRow.querySelector('input[name="originalPrice[]"]');
            const salePriceInclTaxInput = newRow.querySelector('input[name="salePriceInclTax[]"]');
            const salePriceExclTaxInput = newRow.querySelector('input[name="salePriceExclTax[]"]');
            const taxPercentageInput = newRow.querySelector('input[name="taxPercentage[]"]');
            const taxAmountInput = newRow.querySelector('input[name="taxAmount[]"]');
            const totalAmountInput = newRow.querySelector('input[name="totalAmount[]"]');


            quantityInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
            purchasePriceInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
            salePriceInclTaxInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
            // discountPercentageInput.addEventListener("input", () => updateOriginalPrice.call(newRow));
            taxPercentageInput.addEventListener("input", () => updateOriginalPrice.call(newRow))

            // Append the cloned row to the table body
            tablebody.appendChild(newRow);

            // Attach event listeners for the new row
            updateOriginalPrice.call(newRow);
            removeRow(newRow);
            addNewRowButton(newRow);

            // Update the grand total
            updateGrandTotal();
        });
    }



</script>